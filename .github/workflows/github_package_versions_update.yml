name: Update_GitHub_package_versions

on:
  push:
#  schedule:
#    - cron: 0 */3 * * *

env:
  CONFIG_FILE: "github_packages.json"

jobs:
  update_github_releases:
    name: Update github package versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repository: ["gilbertchen/duplicacy", "just-containers/s6-overlay"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.0

      - name: Create package versions file if not exists
        shell: bash
        run: |
          if [[ ! -f "${{ env.CONFIG_FILE }}" ]]; then
            echo "${{ env.CONFIG_FILE }} not found, create empty"
            echo "[]" > ${{ env.CONFIG_FILE }}
          fi

      - name: Create node if not exists
        shell: bash
        run: |
          NODE=`jq -r '.[] | select(.name == "${{ matrix.repository }}").name'`

          if [[ NODE != ${{ matrix.repository }} ]]; then
            echo "Information about ${{ matrix.repository }} package not found in ${{ env.CONFIG_FILE }}, create empty"
            echo "TEMPORARILY NOT SUPPORTED, update ${{ env.CONFIG_FILE }} manually"
          fi

      - name: Read config version
        id: config_version
        shell: bash
        run: |
          version=$(jq -r '.[] | select(.name == "'${{ matrix.repository }}'").version' ${{ env.CONFIG_FILE }})
          echo "::set-output name=version::$version"
          echo "Config version=$version"

      - name: Read repository version
        id: repository_version
        shell: bash
        run: |
          latest_tag=$(curl -Ls https://api.github.com/repos/${{ matrix.repository }}/tags | jq -r "first.name")
          version="${latest_tag:1}"
          echo "::set-output name=version::$version"
          echo "Repository version=$version"

      - name: Update ${{ env.CONFIG_FILE }}
        if: ${{ steps.config_version.outputs.version != steps.repository_version.outputs.version }}
        shell: bash
        run: |
          jq -r '.[] | select(.name == "'${{ matrix.repository }}'").version = "'${{ steps.repository_version.outputs.version }}'"' ${{ env.CONFIG_FILE }} > ${{ env.CONFIG_FILE }}

      - name: Create Pull Request, Bump ${{ matrix.repository }} from ${{ steps.config_version.outputs.version }} to ${{ steps.repository_version.outputs.version }}
        if: ${{ steps.config_version.outputs.version != steps.repository_version.outputs.version }}
        uses: peter-evans/create-pull-request@v3.10.0
        with:
          token: ${{ secrets.DUPLICACY_REPO_PAT }}
          commit-message: Bump ${{ matrix.repository }} from ${{ steps.config_version.outputs.version }} to ${{ steps.repository_version.outputs.version }}
          delete-branch: true
          title: Bump ${{ matrix.repository }} from ${{ steps.config_version.outputs.version }} to ${{ steps.repository_version.outputs.version }}
          body: |
            Bump [${{ matrix.repository }}][https://github.com/${{ matrix.repository }}] from ${{ steps.config_version.outputs.version }} to ${{ steps.repository_version.outputs.version }}.

            - Auto-generated by [create-pull-request][https://github.com/peter-evans/create-pull-request]
          labels: |
            dependencies
